@using Microsoft.AspNetCore.Authorization;

@attribute [Authorize(Roles = "Admin,Representante")]


@page "/representantelegal/edit/{Id:int}"
@inject NavigationManager navigationManager
@inject IRepository repository
@inject SweetAlertService sweetAlertService
@using CurrieTechnologies.Razor.SweetAlert2

<PageTitle>Editar representante</PageTitle>

<h3>Editar</h3>

@if (representanteLegal is null)
{
    <p>Cargando...</p>
}
else
{
    <RepresentanteLegalForm @ref="representanteLegalForm" representanteLegal="representanteLegal" OnValidSubmit="Editar" ReturnAction="Return" />

}

@code {
    [Parameter]
    public int Id { get; set; }
    private RepresentanteLegal representanteLegal;
    private RepresentanteLegalForm representanteLegalForm;

    protected override async Task OnParametersSetAsync()
    {
        var responseHttp = await repository.GetAsync<RepresentanteLegal>($"api/RepresentantesLegalesController/{Id}");
        if (responseHttp.Error)
        {
            if (responseHttp.HttpResponseMessage.StatusCode == HttpStatusCode.NotFound)
            {
                navigationManager.NavigateTo("/representantelegal");
            }
            else
            {
                var messsage = await responseHttp.GetErrorMessageAsync();
                await sweetAlertService.FireAsync("Error", messsage, SweetAlertIcon.Error);
            }
        }
        else
        {
            representanteLegal = responseHttp.Response;
        }
    }


    private async Task Editar()
    {
        var responseHttp = await repository.PutAsync("/api/RepresentantesLegalesController", representanteLegal);
        if (responseHttp.Error)
        {
            var message = await responseHttp.GetErrorMessageAsync();
    await sweetAlertService.FireAsync("Error", message);
            return;
        }

    Return();
    var toast = sweetAlertService.Mixin(new SweetAlertOptions
    {
        Toast = true,
        Position = SweetAlertPosition.BottomEnd,
        ShowConfirmButton = true,
        Timer = 3000
    });
    await toast.FireAsync(icon: SweetAlertIcon.Success, message: "Cambios guardados con éxito.");
}

        private void Return()
        {
        representanteLegalForm!.FormularioPosteadoConExito = true;
        navigationManager.NavigateTo("/representantelegal");
        }
   
}

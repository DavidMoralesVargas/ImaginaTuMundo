@page "/RegisterICBF"
@using ImaginaTuMundo.Shared.DTOs;
@using ImaginaTuMundo.Shared.Enums;
@using ImaginaTuMundo.WEB.AuthenticationProviders;
@using ImaginaTuMundo.WEB.Services
@using ImaginaTuMundo.Shared
@inject IRepository repository
@inject SweetAlertService sweetAlertService
@inject NavigationManager navigationManager
@inject ILoginService loginService


<h3>Registrar Nuevo Usuario</h3>
<EditForm Model="userDTO" OnValidSubmit="CreateUserAsync">
    <DataAnnotationsValidator />

    <div class="card">
        <div class="card-header">
            <span>
                <i class="oi oi-person" /> Registrar Nuevo  Usuario
                <button class="btn btn-sm btn-primary float-end" type="submit"><i class="bi bi-person-add" /> Registrar</button>
            </span>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-6">
                    <div class="mb-3">
                        <label>Nombres:</label>
                        <div>
                            <InputText width="10" @bind-Value="@userDTO.Nombre" />
                            <ValidationMessage For="@(() => userDTO.Nombre)" />
                        </div>
                    </div>
                    <div class="mb-3">
                        <label>Apellidos:</label>
                        <div>
                            <InputText width="10" @bind-Value="@userDTO.Apellido" />
                            <ValidationMessage For="@(() => userDTO.Apellido)" />
                        </div>
                    </div>
                    <div class="mb-3">
                        <label>Documento:</label>
                        <div>
                            <InputText width="10" @bind-Value="@userDTO.Documento" />
                            <ValidationMessage For="@(() => userDTO.Documento)" />
                        </div>
                    </div>
                    <div class="mb-3">
                        <label>Teléfono:</label>
                        <div>
                            <InputText width="10" @bind-Value="@userDTO.PhoneNumber" />
                            <ValidationMessage For="@(() => userDTO.PhoneNumber)" />
                        </div>
                    </div>
                    <div class="mb-3">
                        <label>Dirección:</label>
                        <div>
                            <InputText width="10" @bind-Value="@userDTO.Direccion" />
                            <ValidationMessage For="@(() => userDTO.Direccion)" />
                        </div>
                    </div>
                    <div class="mb-3">
                        <label>Email:</label>
                        <div>
                            <InputText width="10" @bind-Value="@userDTO.Email" />
                            <ValidationMessage For="@(() => userDTO.Email)" />
                        </div>
                    </div>



                    <div class="mb-3">
                        <label>Foto:</label>
                        <div>
                            <InputText width="10" @bind-Value="@userDTO.Foto" />
                            <ValidationMessage For="@(() => userDTO.Foto)" />
                        </div>
                    </div>
                    <div class="mb-3">
                        <label>Contraseña:</label>
                        <div>
                            <InputText type="password" width="10" @bind-Value="@userDTO.Password" />
                            <ValidationMessage For="@(() => userDTO.Password)" />
                        </div>
                    </div>
                    <div class="mb-3">
                        <label>Confirmación de contraseña:</label>
                        <div>
                            <InputText type="password" width="10" @bind-Value="@userDTO.PasswordConfirm" />
                            <ValidationMessage For="@(() => userDTO.PasswordConfirm)" />
                        </div>
                    </div>



                </div>
            </div>
        </div>
    </div>



</EditForm>
@code {
    private UserDTO userDTO = new();



    private async Task CreateUserAsync()
    {
        userDTO.UserName = userDTO.Email;
        userDTO.UserType = UserType.ICBF;
        var responseHttp = await repository.PostAsync<UserDTO, TokenDTO>("/api/accounts/CreateUser", userDTO);
        if (responseHttp.Error)
        {
            var message = await responseHttp.GetErrorMessageAsync();
            await sweetAlertService.FireAsync("Error", message, SweetAlertIcon.Error);
            return;
        }

        await loginService.LoginAsync(responseHttp.Response!.Token);
        navigationManager.NavigateTo("/");
    }
}

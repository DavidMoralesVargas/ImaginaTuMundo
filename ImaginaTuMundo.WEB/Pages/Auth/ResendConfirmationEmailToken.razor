@page "/ResendToken"
@using ImaginaTuMundo.Shared.DTOs;
@inject IRepository repository
@inject SweetAlertService sweetAlertService
@inject NavigationManager navigationManager

@if (loading)
{
    <div class="spinner-border" />
}
<div class="row">
    <div class="col-6">
        <EditForm Model="emailDTO" OnValidSubmit="ResendConfirmationEmailTokenAsync">
            <DataAnnotationsValidator />

            <div class="card">
                <div class="card-header">
                    <span>
                        Reenviar correo de confirmación de contraseña
                        <button class="btn btn-sm btn-primary float-end mx-2">Reenviar</button>
                    </span>
                </div>
                <div class="card-body">
                    <div class="mb-3">
                        <label>Email:</label>
                        <div>
                            <InputText width="10" @bind-Value="@emailDTO.Email"/>
                            <ValidationMessage For="@(()=>emailDTO.Email)"/>
                        </div>
                    </div>
                </div>
            </div>
        </EditForm>
    </div>
</div>


<h3>ResendConfirmationEmailToken</h3>

@code {
    private EmailDTO emailDTO = new();
    private bool loading;

    private async Task ResendConfirmationEmailTokenAsync()
    {
        loading = true;
        var responseHttp = await repository.PostAsync("/api/accounts/ResedToken", emailDTO);
        if (responseHttp.Error)
        {
            var message = await responseHttp.GetErrorMessageAsync();
            await sweetAlertService.FireAsync("Error", message, SweetAlertIcon.Error);
            loading = false;
            return;
        }

        loading = false;
        await sweetAlertService.FireAsync("Confirmación", "Se te ha enviado un correo electrónico con las instrucciones para activar tu usuario", SweetAlertIcon.Info);
        navigationManager.NavigateTo("/");
    }
}
